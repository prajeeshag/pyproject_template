name: Test

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      tests: {% raw %} ${{ steps.filter.outputs.tests }} {% endraw %}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            tests:
              - {{module_name}}/**
              - tests/**
              - examples/**
              - pyproject.toml
              - .github/workflows/test.yml
  lint:
    needs:
      - changes
    if: {% raw %} ${{ needs.changes.outputs.tests == 'true' }} {% endraw %}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read

    # Set job outputs to values from filter step
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - run: uv sync
      - run: ./scripts/lint.sh

  test:
    needs:
      - changes
      - lint
    if: {% raw %} ${{ needs.changes.outputs.tests == 'true' }} {% endraw %}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.12", "3.13"]

    runs-on: {% raw %} ${{ matrix.os }} {% endraw %}
    # Required permissions
    permissions:
      pull-requests: read

    # Set job outputs to values from filter step
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: {% raw %} ${{ matrix.python-version }} {% endraw %}
      - name: Setup uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"
      - run: uv sync
      - run: ./scripts/test.sh
      - name: Create coverage report
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        run: uv run coverage xml
      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
